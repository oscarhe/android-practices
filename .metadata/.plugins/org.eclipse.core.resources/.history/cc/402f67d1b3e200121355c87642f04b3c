package com.spoobrain.addressbookapp;

import java.util.ArrayList;
import java.util.HashMap;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

public class DBTools extends SQLiteOpenHelper {
	
	// Context needed by SQL
	public DBTools(Context applicationContext) {
		
		super(applicationContext, "addressBook.db", null, 1);
		
	}

	@Override
	public void onCreate(SQLiteDatabase database) {
			
		// Don't add ";" at end of query
			String query = "CREATE TABLE contacts (" +
					"contactId INTEGER PRIMARY KEY, " +
					"firstName TEXT, " +
					"phoneNumber TEXT, " +
					"emailAddress TEXT, " +
					"homeAddress TEXT)";
			
			// this call only works for queries that do not request any data
			database.execSQL(query);
		
	}

	@Override
	public void onUpgrade(SQLiteDatabase database, int arg1, int arg2) {

		String query = "DROP TABLE IF EXISTS contacts";
		
		database.execSQL(query);
		
		onCreate(database);
		
	}
	
	
	// maybe create a function for putting the key value pairs
	public void insertContact(HashMap<String, String> queryValues) {
		
		SQLiteDatabase database = this.getWritableDatabase();
		
		ContentValues values = new ContentValues();
		
		values.put("firstName", queryValues.get("firstName"));
		values.put("lastName", queryValues.get("lastName"));
		values.put("phoneNumber", queryValues.get("phoneNumber"));
		values.put("emailAddress", queryValues.get("emailAddress"));
		values.put("homeAddress", queryValues.get("homeAddress"));
		
		database.insert("contacts", null, values);
		
		database.close();
		
	}
	
	public int updateContact(HashMap<String, String> queryValues) {
		
		SQLiteDatabase database = this.getWritableDatabase();

		ContentValues values = new ContentValues();

		values.put("firstName", queryValues.get("firstName"));
		values.put("lastName", queryValues.get("lastName"));
		values.put("phoneNumber", queryValues.get("phoneNumber"));
		values.put("emailAddress", queryValues.get("emailAddress"));
		values.put("homeAddress", queryValues.get("homeAddress"));
		
		return database.update("contacts", values, 
				"contactId" + " = ?", new String[] {queryValues.get("contactId") });
		
	}
	
	public void deleteContact(String id) {
		
		SQLiteDatabase database = this.getWritableDatabase();
		
		String query = "DELETE FROM contacts WHERE " +
				"contactId = '" + id + "'";
		
		database.execSQL(query);
		
	}
	
	public ArrayList<HashMap<String, String>> getAllContacts() {
		
		ArrayList<HashMap<String, String>> contactArrayList = new ArrayList<HashMap<String, String>>();
		
		String query = "SELECT * FROM contacts";
		
		SQLiteDatabase database = this.getWritableDatabase();
		
		// Cursor allows you to read or write data from a query
		Cursor cursor = database.rawQuery(query, null);
		
		if(cursor.moveToFirst()) {
			
			
			
		}
		
	}

}
